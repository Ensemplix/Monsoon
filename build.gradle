apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'maven-publish'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'idea'

group = 'ru.ensemplix.command'
version = '2.0-SNAPSHOT'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceCompatibility = 1.8
targetCompatibility = 1.8

checkstyle {
    toolVersion = '6.3'
    configFile = file('checkstyle.xml')
}

javadoc {
    options.encoding = 'UTF-8'
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.3'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task installGitHooks(type: Copy) {
    from ('scripts/pre-commit')
    into ('.git/hooks')
}

shadowJar {
    classifier = ''
}

repositories {
    mavenCentral()
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact sourcesJar
            artifact javadocJar
            artifact shadowJar

            repositories {
                maven {
                    credentials {
                        username System.getenv('MAVEN_USER') != null ? System.getenv('MAVEN_USER') : ''
                        password System.getenv('MAVEN_PASSWORD') != null ? System.getenv('MAVEN_PASSWORD') : ''
                    }

                    url 'http://maven.ensemplix.ru/artifactory/Ensemplix/'
                }
            }
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib:1.0.3'

    testCompile 'org.projectlombok:lombok:1.16.2'
    testCompile 'com.google.guava:guava:18.0'
    testCompile 'junit:junit:4.12'
}

check.dependsOn jacocoTestReport
ideaModule.dependsOn installGitHooks
